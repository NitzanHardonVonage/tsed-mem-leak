import { Type } from "@tsed/core";
import { Schema } from "swagger-schema-official";
import { OpenApiDefinitions } from "../interfaces/OpenApiDefinitions";
import { OpenApiResponses } from "../interfaces/OpenApiResponses";
/**
 * Build a Schema from a given Model.
 */
export declare class OpenApiModelSchemaBuilder {
    private target;
    protected _definitions: OpenApiDefinitions;
    protected _responses: OpenApiResponses;
    protected _schema: Schema;
    constructor(target: Type<any>);
    get schema(): Schema;
    get definitions(): OpenApiDefinitions;
    get responses(): OpenApiResponses;
    /**
     * Build the Schema and his properties.
     * @returns {OpenApiModelSchemaBuilder}
     */
    build(): this;
    /**
     *
     * @param {Storable} model
     * @returns {Schema}
     */
    protected createSchema({ schema, type, collectionType }: {
        schema: Partial<Schema>;
        type: Type<any>;
        collectionType: Type<any>;
    }): Schema;
    /**
     * Return the stored Schema of the class if exists. Otherwise, return an empty Schema.
     * @returns {any}
     */
    protected getClassSchema(): Schema;
}
/**
 * @deprecated
 */
export declare class OpenApiPropertiesBuilder extends OpenApiModelSchemaBuilder {
}
