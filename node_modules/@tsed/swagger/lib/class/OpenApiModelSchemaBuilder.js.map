{"version":3,"file":"OpenApiModelSchemaBuilder.js","sourceRoot":"","sources":["../../src/class/OpenApiModelSchemaBuilder.ts"],"names":[],"mappings":"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","sourcesContent":["import {JsonSchema, JsonSchemesRegistry, PropertyMetadata, PropertyRegistry} from \"@tsed/common\";\nimport {isArrayOrArrayClass, isClass, isCollection, isObject, nameOf, Storable, Store, Type} from \"@tsed/core\";\nimport {Schema} from \"swagger-schema-official\";\nimport {OpenApiDefinitions} from \"../interfaces/OpenApiDefinitions\";\nimport {OpenApiResponses} from \"../interfaces/OpenApiResponses\";\nimport {swaggerApplyType} from \"../utils\";\n\n/**\n * Build a Schema from a given Model.\n */\nexport class OpenApiModelSchemaBuilder {\n  protected _definitions: OpenApiDefinitions = {};\n  protected _responses: OpenApiResponses = {};\n  protected _schema: Schema;\n\n  constructor(private target: Type<any>) {}\n\n  public get schema(): Schema {\n    return this._schema;\n  }\n\n  public get definitions(): OpenApiDefinitions {\n    return this._definitions;\n  }\n\n  public get responses(): OpenApiResponses {\n    return this._responses;\n  }\n\n  /**\n   * Build the Schema and his properties.\n   * @returns {OpenApiModelSchemaBuilder}\n   */\n  build(): this {\n    const properties = PropertyRegistry.getProperties(this.target);\n    const store = Store.from(this.target);\n    const schema: Schema = this.getClassSchema();\n    schema.type = \"object\";\n    schema.properties = {};\n\n    if (store.get(\"description\")) {\n      schema.description = schema.description || store.get(\"description\");\n    }\n\n    if (schema.required && schema.required.length) {\n      this._responses[400] = {description: \"Missing required parameter\"};\n    }\n\n    properties.forEach((property: PropertyMetadata) => {\n      const propertyKey = property.name || property.propertyKey;\n      schema.properties![String(propertyKey)] = this.createSchema({\n        schema: property.store.get(\"schema\"),\n        type: property.type,\n        collectionType: property.collectionType\n      });\n    });\n\n    this._schema = schema;\n    this._definitions[nameOf(this.target)] = this.schema;\n\n    return this;\n  }\n\n  /**\n   *\n   * @param {Storable} model\n   * @returns {Schema}\n   */\n  protected createSchema({\n    schema = {},\n    type,\n    collectionType\n  }: {\n    schema: Partial<Schema>;\n    type: Type<any>;\n    collectionType: Type<any>;\n  }): Schema {\n    let builder;\n    const typeName = nameOf(type);\n\n    if (schema instanceof JsonSchema) {\n      schema = schema.toObject();\n    }\n\n    if (isClass(type)) {\n      builder = new OpenApiModelSchemaBuilder(type);\n      builder.build();\n\n      this._definitions = {\n        ...this._definitions,\n        ...builder.definitions\n      };\n    }\n\n    if (isCollection(collectionType)) {\n      if (isArrayOrArrayClass(collectionType)) {\n        schema.type = \"array\";\n\n        if (!schema.items) {\n          if (isClass(type)) {\n            schema.items = {\n              $ref: `#/definitions/${typeName}`\n            };\n          } else {\n            schema.items = swaggerApplyType({}, (isObject(schema.additionalProperties) && schema.additionalProperties.type) || type);\n          }\n        }\n\n        return schema;\n      }\n\n      schema.type = schema.type || \"object\";\n\n      if (isClass(type)) {\n        schema.additionalProperties = {\n          $ref: `#/definitions/${typeName}`\n        };\n\n        return schema;\n      }\n\n      schema.additionalProperties = swaggerApplyType(\n        {},\n        (isObject(schema.additionalProperties) && schema.additionalProperties.type) || type\n      );\n\n      return schema;\n    }\n\n    if (isClass(type)) {\n      schema.$ref = `#/definitions/${typeName}`;\n      delete schema.type;\n\n      return schema;\n    }\n\n    schema = swaggerApplyType(schema, schema.type || type);\n\n    return schema;\n  }\n\n  /**\n   * Return the stored Schema of the class if exists. Otherwise, return an empty Schema.\n   * @returns {any}\n   */\n  protected getClassSchema(): Schema {\n    const schema = JsonSchemesRegistry.getSchemaDefinition(this.target) || {};\n    delete schema.definitions;\n\n    return schema as Schema;\n  }\n}\n\n/**\n * @deprecated\n */\nexport class OpenApiPropertiesBuilder extends OpenApiModelSchemaBuilder {}\n"]}