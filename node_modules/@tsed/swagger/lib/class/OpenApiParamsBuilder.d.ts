import { ParamMetadata } from "@tsed/common";
import { Type } from "@tsed/core";
import { Parameter, PathParameter, Schema } from "swagger-schema-official";
import { OpenApiModelSchemaBuilder } from "./OpenApiModelSchemaBuilder";
export declare class OpenApiParamsBuilder extends OpenApiModelSchemaBuilder {
    private pathParameters;
    private _parameters;
    private injectedParams;
    private hasBody;
    private hasFormData;
    private name;
    constructor(target: Type<any>, methodClassName: string, pathParameters?: PathParameter[]);
    get parameters(): Parameter[];
    /**
     *
     * @returns {this}
     */
    build(): this;
    /**
     *
     * @param param
     * @returns {Schema}
     */
    protected createSchemaFromBodyParam(param: ParamMetadata): Schema;
    /**
     *
     * @param {ParamMetadata} model
     * @returns {Schema}
     */
    protected createSchemaFromQueryParam(model: ParamMetadata): Schema;
    /**
     *
     * @returns {HeaderParameter[]}
     */
    private getInHeaders;
    /**
     *
     * @returns {any[]}
     */
    private getInFormData;
    /**
     *
     * @returns {ParamMetadata | undefined}
     */
    private getInBodyParam;
    /**
     *
     * @returns {PathParameter[]}
     */
    private getInPathParams;
    /**
     *
     * @returns {HeaderParameter[]}
     */
    private getInQueryParams;
    /**
     * Create Properties schema from an expression.
     * @param param
     */
    private createSchemaFromExpression;
    private addResponse400;
}
