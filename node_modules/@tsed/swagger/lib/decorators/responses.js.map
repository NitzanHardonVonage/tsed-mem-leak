{"version":3,"file":"responses.js","sourceRoot":"","sources":["../../src/decorators/responses.ts"],"names":[],"mappings":";;AAAA,qCAA0H;AAG1H;;;;;;;GAOG;AACH,SAAgB,SAAS,CAAC,MAAuB,EAAE,QAAkB;IACnE,OAAO,CAAC,GAAG,IAAyB,EAAE,EAAE;QACtC,MAAM,IAAI,GAAG,uBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAE1C,QAAQ,IAAI,EAAE;YACZ,KAAK,QAAQ;gBACX,OAAO,iBAAU,CAAC,WAAW,EAAE,EAAC,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;YAEhE,KAAK,OAAO;gBACV,wBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;gBACxD,MAAM;YAER;gBACE,MAAM,IAAI,+BAAwB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;SACvD;IACH,CAAC,CAAC;AACJ,CAAC;AAhBD,8BAgBC","sourcesContent":["import {decorateMethodsOf, DecoratorParameters, getDecoratorType, StoreMerge, UnsupportedDecoratorType} from \"@tsed/core\";\nimport {Response} from \"swagger-schema-official\";\n\n/**\n *\n * @param {string | number} status\n * @param {Response} response\n * @returns {Function}\n * @decorator\n * @swagger\n */\nexport function Responses(status: string | number, response: Response): Function {\n  return (...args: DecoratorParameters) => {\n    const type = getDecoratorType(args, true);\n\n    switch (type) {\n      case \"method\":\n        return StoreMerge(\"responses\", {[status]: response})(...args);\n\n      case \"class\":\n        decorateMethodsOf(args[0], Responses(status, response));\n        break;\n\n      default:\n        throw new UnsupportedDecoratorType(Responses, args);\n    }\n  };\n}\n"]}