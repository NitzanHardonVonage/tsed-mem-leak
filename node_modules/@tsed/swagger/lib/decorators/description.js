"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const common_1 = require("@tsed/common");
const core_1 = require("@tsed/core");
const baseParameter_1 = require("./baseParameter");
const operation_1 = require("./operation");
/**
 * Add a description metadata on the decorated element.
 *
 * ## Examples
 * ### On class
 *
 * ```typescript
 * @Description("description")
 * class Model {
 *
 * }
 * ```
 *
 * ### On method
 *
 * ```typescript
 * @Controller("/")
 * class ModelCtrl {
 *    @Description("description")
 *    async method() {}
 * }
 * ```
 *
 * ### On parameter
 *
 * ```typescript
 * @Controller("/")
 * class ModelCtrl {
 *    async method(@Description("description") @PathParam("id") id: string) {}
 * }
 * ```
 *
 * ### On property
 *
 * ```typescript
 * class Model {
 *    @Description("description")
 *    id: string;
 * }
 * ```
 *
 * @param {string} description
 * @returns {Function}
 * @decorator
 * @swagger
 * @jsonschema
 * @property
 * @class
 * @method
 * @parameter
 */
function Description(description) {
    return (...args) => {
        const type = core_1.getDecoratorType(args);
        switch (type) {
            case "parameter":
                return baseParameter_1.BaseParameter({ description })(...args);
            case "method":
                return operation_1.Operation({ description })(...args);
            case "class":
                core_1.Store.from(...args).set("description", description);
            default:
                common_1.Schema({ description })(...args);
        }
    };
}
exports.Description = Description;
//# sourceMappingURL=description.js.map