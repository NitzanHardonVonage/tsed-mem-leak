{"version":3,"file":"statusAndHeadersMiddleware.js","sourceRoot":"","sources":["../../../src/mvc/components/statusAndHeadersMiddleware.ts"],"names":[],"mappings":";;AAEA,SAAgB,0BAA0B,CAAC,OAAwB,EAAE,QAA0B,EAAE,IAAS;IACxG,MAAM,EACJ,UAAU,EACV,QAAQ,EAAE,EAAC,OAAO,GAAG,EAAE,EAAC,EACzB,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;IAEzB,IAAI,QAAQ,CAAC,UAAU,KAAK,GAAG,EAAE;QAC/B,kDAAkD;QAClD,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;KAC7B;IAED,gBAAgB;IAChB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,EAAE;QAChD,MAAM,CAAC,KAAK,KAAK,SAAS,IAAI,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;IACxE,CAAC,CAAC,CAAC;IACH,IAAI,EAAE,CAAC;AACT,CAAC;AAhBD,gEAgBC","sourcesContent":["import * as Express from \"express\";\n\nexport function statusAndHeadersMiddleware(request: Express.Request, response: Express.Response, next: any) {\n  const {\n    statusCode,\n    response: {headers = {}}\n  } = request.ctx.endpoint;\n\n  if (response.statusCode === 200) {\n    // apply status only if the isn't already modified\n    response.status(statusCode);\n  }\n\n  // apply headers\n  Object.entries(headers).forEach(([key, schema]) => {\n    schema.value !== undefined && response.set(key, String(schema.value));\n  });\n  next();\n}\n"]}