{"version":3,"file":"RequestContext.js","sourceRoot":"","sources":["../../../src/mvc/models/RequestContext.ts"],"names":[],"mappings":";;;AAAA,iCAAyC;AAEzC,mDAA8C;AAS9C,MAAa,cAAe,SAAQ,GAAa;IA+C/C,YAAY,EAAC,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,iBAAiB,GAAG,EAAE,EAAyB;QAC3E,KAAK,EAAE,CAAC;QAtBV;;WAEG;QACM,cAAS,GAAS,IAAI,IAAI,EAAE,CAAC;QACtC;;WAEG;QACM,cAAS,GAAG,IAAI,oBAAe,EAAO,CAAC;QAgB9C,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,MAAM,GAAG,IAAI,6BAAa,CAAC,MAAM,EAAE;YACtC,EAAE;YACF,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,GAAG;YACH,iBAAiB;SAClB,CAAC,CAAC;IACL,CAAC;IAEK,OAAO;;YACX,MAAM,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QACjC,CAAC;KAAA;CACF;AA7DD,wCA6DC","sourcesContent":["import {LocalsContainer} from \"@tsed/di\";\nimport {EndpointMetadata} from \"./EndpointMetadata\";\nimport {RequestLogger} from \"./RequestLogger\";\n\nexport interface IRequestContextOptions {\n  id: string;\n  logger: any;\n  url: string;\n  ignoreUrlPatterns?: any[];\n}\n\nexport class RequestContext extends Map<any, any> {\n  /**\n   * Request id generated by @@createMiddleware@@.\n   *\n   * ::: tip\n   * By default Ts.ED generate uuid like that `uuidv4().replace(/-/gi, \"\"))`.\n   * Dash are removed to simplify tracking logs in Kibana\n   * :::\n   *\n   * ::: tip\n   * Request id can by customized by changing the server configuration.\n   *\n   * ```typescript\n   * @ServerSettings({\n   *   logger: {\n   *     reqIdBuilder: createUniqId // give your own id generator function\n   *   }\n   * })\n   * class Server {\n   *\n   * }\n   * ```\n   * :::\n   *\n   */\n  readonly id: string;\n  /**\n   * Date when request have been handled by the server. @@RequestLogger@@ use this date to log request duration.\n   */\n  readonly dateStart: Date = new Date();\n  /**\n   * The request container used by the Ts.ED DI. It contain all services annotated with `@Scope(ProviderScope.REQUEST)`\n   */\n  readonly container = new LocalsContainer<any>();\n  /**\n   * The current @@EndpointMetadata@@ resolved by Ts.ED during the request.\n   */\n  public endpoint: EndpointMetadata;\n  /**\n   * The data return by the previous endpoint if you use multiple handler on the same route. By default data is empty.\n   */\n  public data: any;\n  /**\n   * Logger attached to the context request.\n   */\n  readonly logger: RequestLogger;\n\n  constructor({id, logger, url, ignoreUrlPatterns = []}: IRequestContextOptions) {\n    super();\n    this.id = id;\n    this.logger = new RequestLogger(logger, {\n      id,\n      startDate: this.dateStart,\n      url,\n      ignoreUrlPatterns\n    });\n  }\n\n  async destroy() {\n    await this.container.destroy();\n  }\n}\n"]}