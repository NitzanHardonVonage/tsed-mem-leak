{"version":3,"file":"DIConfiguration.js","sourceRoot":"","sources":["../../src/services/DIConfiguration.ts"],"names":[],"mappings":"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","sourcesContent":["import {deepExtends, getValue, setValue} from \"@tsed/core\";\nimport {IDIConfigurationOptions} from \"../interfaces/IDIConfigurationOptions\";\nimport {ProviderScope} from \"../interfaces/ProviderScope\";\n\nexport class DIConfiguration {\n  readonly default: Map<string, any> = new Map();\n  protected map: Map<string, any> = new Map();\n\n  [key: string]: any;\n\n  constructor(initialProps = {}) {\n    Object.entries({\n      scopes: {},\n      ...initialProps\n    }).forEach(([key, value]) => {\n      this.default.set(key, value);\n    });\n\n    return new Proxy(this, {\n      getOwnPropertyDescriptor(target: any, p: PropertyKey): PropertyDescriptor | undefined {\n        return Reflect.getOwnPropertyDescriptor(target, p);\n      },\n\n      has(target: any, p: PropertyKey): boolean {\n        if (Reflect.has(target, p) || typeof p === \"symbol\") {\n          return Reflect.has(target, p);\n        }\n\n        return target.get(p as any) !== undefined;\n      },\n\n      get(target: any, p: PropertyKey, receiver: any): any {\n        if (Reflect.has(target, p) || typeof p === \"symbol\") {\n          return Reflect.get(target, p, receiver);\n        }\n\n        return target.get(p as any);\n      },\n\n      set(target: DIConfiguration, p: PropertyKey, value: any, receiver: any): boolean {\n        if (Reflect.has(target, p) || typeof p === \"symbol\") {\n          return Reflect.set(target, p, value, receiver);\n        }\n\n        return !!target.set(p as any, value);\n      },\n\n      deleteProperty(target: any, p: PropertyKey): boolean {\n        return Reflect.deleteProperty(target, p);\n      },\n\n      defineProperty(target: any, p: PropertyKey, attributes: PropertyDescriptor): boolean {\n        return Reflect.defineProperty(target, p, attributes);\n      },\n\n      ownKeys(target: DIConfiguration): PropertyKey[] {\n        return Reflect.ownKeys(target)\n          .concat(Array.from(target.default.keys()))\n          .concat(Array.from(target.map.keys()));\n      }\n    });\n  }\n\n  get scopes(): {[key: string]: ProviderScope} {\n    return this.getRaw(\"scopes\");\n  }\n\n  set scopes(value: {[key: string]: ProviderScope}) {\n    this.setRaw(\"scopes\", value);\n  }\n\n  /**\n   *\n   * @param callbackfn\n   * @param thisArg\n   */\n  forEach(callbackfn: (value: any, index: string, map: Map<string, any>) => void, thisArg?: any) {\n    return new Set([...Array.from(this.default.keys()), ...Array.from(this.map.keys())]).forEach(key => {\n      callbackfn(this.getRaw(key), key, this.map);\n    }, thisArg);\n  }\n\n  /**\n   *\n   * @param propertyKey\n   * @param value\n   */\n  set(propertyKey: string | Partial<IDIConfigurationOptions>, value?: any): this {\n    if (typeof propertyKey === \"string\") {\n      this.setRaw(propertyKey, value);\n    } else {\n      Object.assign(this, propertyKey);\n    }\n\n    return this;\n  }\n\n  setRaw(propertyKey: string, value: any) {\n    setValue(propertyKey, value, this.map);\n\n    return this;\n  }\n\n  /**\n   *\n   * @param propertyKey\n   * @returns {undefined|any}\n   */\n  get<T>(propertyKey: string): T {\n    return this.resolve(this.getRaw(propertyKey));\n  }\n\n  getRaw(propertyKey: string): any {\n    if ([\"scopes\"].includes(propertyKey)) {\n      return {\n        ...this.default.get(propertyKey),\n        ...this.map.get(propertyKey)\n      };\n    }\n\n    const value = getValue(propertyKey, this.map);\n\n    if (value !== undefined) {\n      return value;\n    }\n\n    return getValue(propertyKey, this.default);\n  }\n\n  merge(obj: Partial<IDIConfigurationOptions>) {\n    Object.entries(obj).forEach(([key, value]) => {\n      const descriptor = Object.getOwnPropertyDescriptor(DIConfiguration.prototype, key);\n      const originalValue = this.get(key);\n      value = deepExtends(value, originalValue);\n\n      if (descriptor && ![\"default\", \"set\", \"map\", \"get\"].includes(key)) {\n        this[key] = value;\n      }\n    });\n  }\n\n  /**\n   *\n   * @param value\n   * @returns {any}\n   */\n  resolve(value: any) {\n    if (typeof value === \"object\" && value !== null) {\n      Object.entries(value).forEach(([k, v]) => {\n        value[k] = this.resolve(v);\n      });\n\n      return value;\n    }\n\n    if (typeof value === \"string\") {\n      return value\n        .replace(/\\${([\\w.]+)}/gi, (match, key) => getValue(key, this.map))\n        .replace(/<([\\w.]+)>/gi, (match, key) => getValue(key, this.map))\n        .replace(/{{([\\w.]+)}}/gi, (match, key) => getValue(key, this.map));\n    }\n\n    return value;\n  }\n}\n"]}