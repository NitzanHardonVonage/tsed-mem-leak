import { IDIConfigurationOptions, ProviderScope, TokenProvider } from "../interfaces";
export interface IModuleOptions extends IDIConfigurationOptions {
    /**
     * Define dependencies to build the provider
     */
    imports?: TokenProvider[];
    /**
     *
     */
    scope?: ProviderScope;
    [key: string]: any;
}
/**
 * Declare a new Ts.ED module
 *
 * ## Options
 * - imports: List of Provider which must be built by injector before invoking the module
 * - resolvers: List of external DI must be used to resolve unknown provider
 * - deps: List of provider must be injected to the module constructor (explicit declaration)
 *
 * @param options
 * @decorator
 */
export declare function Module(options?: Partial<IModuleOptions>): Function;
